#!/bin/bash -x
#############################################################
# @author Mia Hunt
# @github kaykay38
#############################################################
urlRegex="^https://.*"
media="$(echo -e "Music\nVideos\nPodcasts"| dmenu -c -h 40 -l 3 -p "Playlists")"
if [[ $media =~ Music || $media =~ Videos || $media =~ Podcasts ]]; then
    playlistIndex="$HOME/.config/mpvplaylist/$media/.playlists/.playlist.index"
    playlistName="$(cut -d '"' -f 2 "$playlistIndex" | sort | dmenu -c -h 40 -l 8 -p "$media Playlists")"
elif [[ -z "$media" ]]; then
    exit 1
else
    playlistName="$media"
fi
currentPlaylistFile="$HOME/.config/mpvplaylist/Music/.playlists/.current.playlist"
add_playlist() {
    media="$(echo -e "Music\nVideos\nPodcasts"| dmenu -c -h 40 -l 3 -p "Add New Playlist Type")"
    if [[ ! -z "$media" ]]; then
        playlistIndex="$HOME/.config/mpvplaylist/$media/.playlists/.playlist.index"
        newPlaylistInfo="$(dmenu -c -h 40 -l 1 -p "Add New $media Playlist")"
        if [[ ! -z "$newPlaylistInfo" ]]; then
            newPlaylist="$(echo "$newPlaylistInfo" | cut -d ' ' -f 1)"
            newPlaylistName="$(echo "$newPlaylistInfo" |cut -d '"' -f 2)"
            [[ "$(grep "^$newPlaylist$" "$playlistIndex")" ]] && notify-send "$media Playlist" "$newPlaylist already exists" && exit 1;
            echo "$newPlaylistInfo" >> "$playlistIndex" && notify-send "$media Playlist" "<b>$newPlaylistName</b> successfully added";
        fi
    else
        exit 1
    fi
    exit 0
}

update_playlist() {
    media="$(echo -e "Music\nVideos\nPodcasts"| dmenu -c -h 40 -l 3 -p "Update Playlist Type")"
    if [[ ! -z "$media" ]]; then
        playlistIndex="$HOME/.config/mpvplaylist/$media/.playlists/.playlist.index"
        toUpdatePlaylist="$(cut -d '"' -f 2 "$playlistIndex" | sort | dmenu -c -h 40 -l 8 -p "Update $media Playlist Name/Location")"
        if [[ ! -z "$toUpdatePlaylist" ]]; then
            toUpdatePlaylistEscaped="$(sed 's/(/\\(/g; s/)/\\)/g; s/\"/\\\"/g;' <<< $toUpdatePlaylist)"
            updatedPlaylist="$(rg "$toUpdatePlaylistEscaped" "$playlistIndex" | dmenu -c -h 40 -l 1 -p "Update '$toUpdatePlaylist' Playlist Name/Location")"
            updatedPlaylistEscaped="$(sed 's#/#\\/#g; s#(#\\(#g; s#)#\\)#g; s#\"#\\\"#g;' <<< $updatedPlaylist)"
            [[ ! -z "$updatedPlaylist" ]] &&
                sed -i "s/.*\s*\"$toUpdatePlaylist\"\s*$/$updatedPlaylistEscaped/" "$playlistIndex" && notify-send "$media Playlist" "<b>$toUpdatePlaylist</b> successfully updated" || exit 1;
        fi
    else
        exit 1
    fi
    exit 0;
}

edit_playlist() {
    media="$(echo -e "Music\nVideos\nPodcasts"| dmenu -c -h 40 -l 3 -p "Edit Playlist Type")"
    if [[ ! -z "$media" ]]; then
        playlistIndex="$HOME/.config/mpvplaylist/$media/.playlists/.playlist.index"
        toEditPlaylist="$(cut -d '"' -f 2 "$playlistIndex" | sort | dmenu -c -h 40 -l 8 -p "Edit $media Playlist")"
        if [[ ! -z "$toEditPlaylist" ]]; then
            toEditPlaylistEscaped="$(sed 's/(/\\(/g; s/)/\\)/g; s/\"/\\\"/g;' <<< $toEditPlaylist)"
            toEditPlaylistFile="$(rg "$toEditPlaylistEscaped" "$playlistIndex" | cut -d ' ' -f 1)"
            [[ ! -z "$toEditPlaylistFile" ]] &&
                alacritty --command $EDITOR "$toEditPlaylistFile" && notify-send "$media Playlist" "<b>$toEditPlaylist</b> successfully edited" || exit 1;
        fi
    else
        exit 1
    fi
    exit 0;
}

delete_playlist() {
    media="$(echo -e "Music\nVideos\nPodcasts"| dmenu -c -h 40 -l 3 -p "Delete Playlist Type")"
    if [[ ! -z "$media" ]]; then
        playlistIndex="$HOME/.config/mpvplaylist/$media/.playlists/.playlist.index"
        deletePlaylist="$(cut -d '"' -f 2 "$playlistIndex" | sort | dmenu -c -h 40 -l 8 -p "Delete $media Playlist")"
        if [[ ! -z $deletePlaylist ]]; then sed -i "/\"$deletePlaylist\"/d" "$playlistIndex" && notify-send "$media Playlist" "<b>$deletePlaylist</b> successfully deleted"; else exit 1; fi
    else
        exit 1
    fi
    exit 0;
}

list_playlist() {
    media="$(echo -e "Music\nVideos\nPodcasts"| dmenu -c -h 40 -l 3 -p "List Playlist Type")"
    if [[ ! -z "$media" ]]; then
        playlistIndex="$HOME/.config/mpvplaylist/$media/.playlists/.playlist.index"
        toListPlaylist="$(cut -d '"' -f 2 "$playlistIndex" | sort | dmenu -c -h 40 -l 8 -p "List $media Playlist")"
        if [[ ! -z "$toListPlaylist" ]]; then
            toListPlaylistEscaped="$(sed 's/(/\\(/g; s/)/\\)/g; s/\"/\\\"/g;' <<< $toListPlaylist)"
            toListPlaylistFile="$(rg "$toListPlaylistEscaped" "$playlistIndex" | cut -d ' ' -f 1)"
            [[ ! -z "$toListPlaylistFile" ]] && [[ -f "$toListPlaylistFile" ]] &&
                dmenu -c -h 40 -l 8 -p "'$toListPlaylist' Playlist" < "$toListPlaylistFile" || exit 1;
        fi
    else
        exit 1
    fi
    exit 0;
}
if [[ $playlistName =~ ^@q$|quit$ ]]; then
    pgrep -f 'mpv --no-video' | xargs kill
    echo "" > "$currentPlaylistFile" && exit 0;
elif [[ $playlistName =~ ^@qv$|quitvideo$ ]]; then
    pgrep -f 'mpv ' | xargs kill
    echo "" > "$currentPlaylistFile" && exit 0;
elif [[ $playlistName =~ ^@a$|add$ ]]; then
    add_playlist 
elif [[ $playlistName =~ ^@d$|delete$|remove$ ]]; then
    delete_playlist
elif [[ $playlistName =~ ^@u$|update$ ]]; then
    update_playlist
elif [[ $playlistName =~ ^@e$|edit$ ]]; then
    edit_playlist
elif [[ $playlistName =~ ^@l$|list$ ]]; then
    list_playlist
elif [[ $playlistName =~ ^@c$|current$ ]]; then
    dmenu -c -h 40 -l 1 -p "Current playlist" < "$currentPlaylistFile"
fi
playlist="$(grep "\"$playlistName\"" "$playlistIndex" | cut -d ' ' -f 1)"
if [[ $playlist =~ $urlRegex ]]; then
    pgrep -f 'mpv --no-video' | xargs kill
    if [[ $media =~ Videos ]]; then
        mpv $playlist & echo "$playlistName" > "$currentPlaylistFile" && exit 0
    elif [[ $media =~ Podcasts ]]; then
        mpv --no-video $playlist & echo "$playlistName" > "$currentPlaylistFile"
    else    
        mpv --no-video $playlist --shuffle & echo "$playlistName" > "$currentPlaylistFile"
    fi

elif [[ -f "$playlist" ]]; then
    pgrep -f 'mpv --no-video' | xargs kill
    if [[ $media =~ Videos ]]; then
        mpv --playlist=$playlist & echo "$playlistName" > "$currentPlaylistFile" && exit 0
    elif [[ $media =~ Podcasts ]]; then
        mpv --no-video --playlist=$playlist & echo "$playlistName" > "$currentPlaylistFile"
    else
        mpv --no-video --playlist=$playlist --shuffle & echo "$playlistName" > "$currentPlaylistFile"
    fi

elif [[ -d $playlist ]]; then
    pgrep -f 'mpv --no-video' | xargs kill
    if [[ $media =~ Videos ]]; then
        mpv $playlist & echo "$playlistName" > "$currentPlaylistFile" && exit 0
    elif [[ $media =~ Podcasts ]]; then
        mpv --no-video --playlist=$playlist & echo "$playlistName" > "$currentPlaylistFile"
    else
        mpv --no-video $playlist --shuffle & echo "$playlistName" > "$currentPlaylistFile"
    fi
fi
